GIT NOTES:-

1) git --version --> To check current git version installed on your system.
2) git status --> To check overall status of git repository.
3) git init --> To initialize empty git repo.
4) Architecture:
Working directory --> Staging Area --> Git directory repo
5) git add . --> All files under that repo will be saved to staging area
6) git commit -m "Version 1" --> To commit the changes saving it to git directory repo.
7) git config --global user.email "aryandatsme26@gmail.com" - To add new/change email to global repo.
8) git config --global user.name "Aryan Sharma" - To add new/change name to global repo.
9) git log --> To fetch all committed/saved details 
10) git config --global user.name --> To fetch name
11) git config --global user.email -->To fetch email
12) git remote add origin https://github.com/aryandatsme/GIT_Tutorials.git --> To setup origin connection with your local machine and GitHub.
13) git push -u origin master --> To commit and push all the saved updates from local to GitHub
14) git pull origin master --> To commit and pull all the saved updates from GitHub to local
15) git diff --> To check what is added or removed in the local repository
16) git diff --staged --> To check what is added or removed in the staged area(once add . is triggered)
17) git reset Fil1.tst --> To reset the changes saved in staged area 
18) git checkout File1.tst --> To delete the changes done in local file it will automatically reset.
19) git checkout . --> Reset the file till last commit.
20) git add . --> Stages new and modified file, without deleting
21) git add -A --> Stages all file
22) git add -u --> stages modified and deleted file, without new
23) git pull --> Fetch all the changes done by any other user on the repository
24) .git --> In this folder all the data regrading all the files is stored which helps to fetch that file in future
25) git clone https://github.com/aryandatsme/GIT_Tutorials.git --> To clone the folder from GitHub to local copy the url from GitHub repository download section (http or ssh if you have)
26) ls -la --> Shows .git folder is generated which stores all the file data
27) git branch --> To verify how many branches are present in a repository
28) git branch new-test --> To add new branch its name is new-test
29) git checkout new-test --> To switch from master to new-test branch
30) git push -u origin new-test -> To add new branch and push it into GitHub from local
31) git checkout master --> To comeback in master branch
32) git merge new-testing --> To merge new-test branch files into master
33) git push -u origin master --> To push the changes to GitHub
34) git branch -d new-test --> It will delete branch new-test but it won't update on GitHub.
35) git branch origin --delete new-test --> It will delete the new-test branch from GitHub too.
36) -u origin master --> We use -u so that from next time even if we run git push it will work.